stages:
  - build
  - test
  - qa
  - publish
  - trigger_tim

image: 
  name: gitlab-registry.cern.ch/industrial-controls/sw-infra/cc7-maven:jdk-11-mvn-3.6-1
  entrypoint: [""]   


variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn $MAVEN_CLI_OPTS/maven.config` so the same config is used
  # when running from the command line.
  MAVEN_CLI_OPTS:
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      --batch-mode --errors --show-version --settings $CI_PROJECT_DIR/settings.xml
# It would be good to get the certs for this one


#  =========================
#  === Stage: build      ===
#  =========================

Compile:
  stage: build
  script:
    - export MAVEN_OPTS=""
    - mvn $MAVEN_CLI_OPTS install
  artifacts:
    name: "$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    untracked: true
    when: on_success
    expire_in: 60 minutes
  except:
    - master
    - tags

#  =========================
#  ===== Stage: test =======
#  =========================

Test:
  stage: test
  script:
    - export MAVEN_OPTS=""
    - mkdir reports
    - mvn $MAVEN_CLI_OPTS install
    - find -iname 'TEST-*.xml' -exec cp {} ./reports/ \;
  artifacts:
    name: "$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 60 minutes
    when: always
    reports:
      junit: reports/*.xml
  only:
    - master
    
"Build docs":
  stage: test
  image: jekyll/builder:3.8.5
  script:
    - cd docs
    - jekyll build --config "_config.yml,_overwrite_url.yml"
  artifacts:
    name: site
    when: on_success
    expire_in: 2 days
    paths:
      - docs/_site
  only:
    - master

#  =========================
#  ====== Stage: QA ========
#  =========================

# These tasks may need to override MAVEN_OPTS manually
"Sonar QA":
  stage: qa
  script:
    - test -e $CI_PROJECT_DIR/.m2/repository/cern/c2mon && find $CI_PROJECT_DIR/.m2/repository/cern/c2mon
    - mvn $MAVEN_CLI_OPTS sonar:sonar -Dsonar.host.url=${SONAR_URL} -Dsonar.analysis.mode=preview -Dsonar.gitlab.commit_sha=$CI_BUILD_REF -Dsonar.gitlab.ref_name=$CI_BUILD_REF_NAME -Dsonar.gitlab.project_id=$CI_PROJECT_ID -Dsonar.gitlab.max_major_issues_gate=0
  except:
    - master
    - tags

#  =========================
#  ===== Stage: Publish ====
#  =========================

# Fully build and publish master branch
Publish:
  stage: publish
  script:
    - mvn $MAVEN_CLI_OPTS -DskipTests deploy
  only:
    - master

# Publish docker images?

"Sonar master QA":
  stage: publish                                                     
  script:
    - mvn $MAVEN_CLI_OPTS package sonar:sonar -Dmaven.test.skip=true -DskipDocker=true -Dsonar.host.url=${SONAR_URL} -Dsonar.dependencyCheck.reportPath=target/dependency-check-report.xml
  only:                                                    
    - master

"Deploy docs":
  stage: publish
  dependencies:
    - "Build docs"
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer
  variables:
    EOS_PATH: "/eos/project/c/c2mon/www"
    CI_OUTPUT_DIR: "docs/_site"
    EOS_ACCOUNT_USERNAME: "${KRB_USERNAME}"
    EOS_ACCOUNT_PASSWORD: "${KRB_PASSWORD}"
  script:
    - deploy-eos
  only:
    - master
    
#  =========================
#  === Stage: trigger_tim ==
#  =========================

"Trigger TIM build":
  stage: trigger_tim                            
  image: appropriate/curl:3.1
  dependencies: []
  script:
    - "curl --insecure -X POST -F token=$TIM_SERVER_TOKEN -F ref=master https://gitlab.cern.ch/api/v4/projects/9859/trigger/pipeline"
  only:
  - master
