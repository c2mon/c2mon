stages:
  - build
  - test
  - publish
  - trigger_and_qa 

image:
  name: gitlab-registry.cern.ch/industrial-controls/sw-infra/cc7-maven:jdk-11-mvn-3.6-1
  entrypoint: [ "" ]


variables:
  MAVEN_CLI_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository --batch-mode --show-version -U --settings $CI_PROJECT_DIR/settings.xml"

default:
  cache:
    key: "$CI_PROJECT_NAME"
    paths:
      - "$CI_PROJECT_DIR/.m2"

#  =========================
#  === Stage: build      ===
#  =========================

compile:
  stage: build
  script:
    - echo "MAVEN_CLI_OPTS=$MAVEN_CLI_OPTS"
    - echo "MAVEN_BUILD_ARGS=$MAVEN_BUILD_ARGS"
    - mvn $MAVEN_CLI_OPTS $MAVEN_BUILD_ARGS -DskipTests=true clean package
  artifacts:
    paths:
      - "target"

#  =========================
#  ====== Stage: TEST ======
#  =========================

test:
  stage: test
  cache:
    key: "$CI_PROJECT_NAME"
    paths:
      - "$CI_PROJECT_DIR/.m2"
    policy: pull
  script:
    - echo "MAVEN_CLI_OPTS=$MAVEN_CLI_OPTS"
    - echo "MAVEN_TEST_ARGS=$MAVEN_TEST_ARGS"
    - mvn $MAVEN_CLI_OPTS $MAVEN_TEST_ARGS verify
  artifacts:
    paths:
      - "*/*/target/*-reports"

#  =========================
#  ===== Stage: Publish ====
#  =========================

reports:
  stage: publish
  cache: { }
  script:
    - echo "Publish reports to GitLab"
  artifacts:
    reports:
      junit:
        - "*/*/target/*-reports/TEST-*.xml"

publish image:
  stage: publish
  cache:
    key: "$CI_PROJECT_NAME"
    paths:
      - "$CI_PROJECT_DIR/.m2"
    policy: pull
  script:
    - mvn $MAVEN_CLI_OPTS deploy -DskipTests=true
  only:
    - master
    - develop
    
publish image manually:
  stage: publish
  cache:
    key: "$CI_PROJECT_NAME"
    paths:
      - "$CI_PROJECT_DIR/.m2"
    policy: pull
  script:
    - mvn $MAVEN_CLI_OPTS deploy -DskipTests=true
  when: manual
  except:
    - master
    - develop

"Build docs":
  stage: publish
  image: jekyll/builder:3.8.5
  script:
    - cd docs
    - jekyll build --config "_config.yml,_overwrite_url.yml"
  artifacts:
    name: site
    when: on_success
    expire_in: 2 days
    paths:
      - docs/_site
  only:
    - master

#  ==========================
#  === Stage: TRIGGER & QA ==
#  ==========================

"Trigger TIM build":
  stage: trigger_and_qa                            
  image: appropriate/curl:3.1
  dependencies: []
  script:
    - "curl --insecure -X POST -F token=$TIM_SERVER_TOKEN -F ref=master https://gitlab.cern.ch/api/v4/projects/9859/trigger/pipeline"
  only:
    - master
    - develop


# These tasks may need to override MAVEN_OPTS manually
"Sonar QA":
  stage: trigger_and_qa
  allow_failure: true
  cache:
    key: "$CI_PROJECT_NAME"
    paths:
      - "$CI_PROJECT_DIR/.m2"
    policy: pull
  script:
    - >-
      mvn $MAVEN_CLI_OPTS package sonar:sonar
      -Dmaven.test.skip=true
      -DskipDocker=true
      -Dsonar.host.url=${SONAR_URL} 
      -Dsonar.analysis.mode=preview 
      -Dsonar.gitlab.commit_sha=$CI_BUILD_REF 
      -Dsonar.gitlab.ref_name=$CI_BUILD_REF_NAME 
      -Dsonar.gitlab.project_id=$CI_PROJECT_ID 
      -Dsonar.gitlab.max_major_issues_gate=0
  except:
    - master
    - tags

"Sonar master QA":
  stage: trigger_and_qa
  allow_failure: true
  cache:
    key: "$CI_PROJECT_NAME"
    paths:
      - "$CI_PROJECT_DIR/.m2"
    policy: pull
  script:
    - >-
      mvn $MAVEN_CLI_OPTS package sonar:sonar
      -Dmaven.test.skip=true
      -DskipDocker=true  
      -Dsonar.host.url=${SONAR_URL} 
      -Dsonar.dependencyCheck.reportPath=target/dependency-check-report.xml
  only:                                                    
    - master
