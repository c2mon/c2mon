<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cern.c2mon.server.cache.dbaccess.DeviceClassMapper">

  <resultMap id="deviceClassResultMap" type="cern.c2mon.server.common.device.DeviceClassCacheObject">
    <constructor>
      <idArg column="device_class_id" javaType="Long" />
      <arg column="device_class_name" javaType="String" />
      <arg column="device_class_description" javaType="String" />
    </constructor>
    <collection property="properties" ofType="cern.c2mon.shared.client.device.Property" javaType="java.util.ArrayList" resultMap="propertyResultMap" />
    <collection property="commands" ofType="cern.c2mon.shared.client.device.Command" javaType="java.util.ArrayList" resultMap="commandResultMap" />
    <collection property="deviceIds" ofType="Long" javaType="java.util.ArrayList" resultMap="deviceIdsResultMap" />
  </resultMap>

  <resultMap id="propertyResultMap" type="cern.c2mon.shared.client.device.Property">
    <id column="property_id" property="id" jdbcType="NUMERIC" javaType="java.lang.Long"/>
    <result column="property_name" property="name" />
    <result column="property_description" property="description" />

    <collection property="fields" ofType="cern.c2mon.shared.client.device.Property" javaType="java.util.ArrayList">
      <id column="field_id" property="id" jdbcType="NUMERIC" javaType="java.lang.Long"/>
      <result column="field_name" property="name" />
    </collection>
  </resultMap>

  <resultMap id="commandResultMap" type="cern.c2mon.shared.client.device.Command">
    <id column="command_id" property="id" jdbcType="NUMERIC" javaType="java.lang.Long"/>
    <result column="command_name" property="name" />
    <result column="command_description" property="description" />
  </resultMap>

  <resultMap id="deviceIdsResultMap" type="Long">
    <id column="device_id" jdbcType="NUMERIC" javaType="java.lang.Long"/>
  </resultMap>

  <!-- getAll needed for persistent caches -->
  <select id="getAll" resultMap="deviceClassResultMap">
        SELECT DEVICECLASS.DEVCLASSID as device_class_id,
           DEVICECLASS.DEVCLASSNAME as device_class_name,
           DEVICECLASS.DEVCLASSDESC as device_class_description,
           PROPERTY.PROPID as property_id,
           PROPERTY.PROPNAME as property_name,
           PROPERTY.PROPDESC as property_description,
           FIELD.FIELDID as field_id,
           FIELD.FIELDNAME as field_name,
           COMMAND.CMDID as command_id,
           COMMAND.CMDNAME as command_name,
           COMMAND.CMDDESC as command_description,
           DEVICE.DEVID as device_id
      FROM DEVICECLASS
           LEFT OUTER JOIN PROPERTY
        ON DEVICECLASS.DEVCLASSID = PROPERTY.PROPDEVCLASSID
           LEFT OUTER JOIN FIELD
        ON PROPERTY.PROPID = FIELD.FIELDPROPID
           LEFT OUTER JOIN COMMAND
        ON DEVICECLASS.DEVCLASSID = COMMAND.CMDDEVCLASSID
           LEFT OUTER JOIN DEVICE
        ON DEVICECLASS.DEVCLASSID = DEVICE.DEVCLASSID
  </select>

  <!-- getItem needed for persistence caches -->
  <select id="getItem" resultMap="deviceClassResultMap"
    parameterType="Long">
    SELECT DEVICECLASS.DEVCLASSID as device_class_id,
           DEVICECLASS.DEVCLASSNAME as device_class_name,
           DEVICECLASS.DEVCLASSDESC as device_class_description,
           PROPERTY.PROPID as property_id,
           PROPERTY.PROPNAME as property_name,
           PROPERTY.PROPDESC as property_description,
           FIELD.FIELDID as field_id,
           FIELD.FIELDNAME as field_name,
           COMMAND.CMDID as command_id,
           COMMAND.CMDNAME as command_name,
           COMMAND.CMDDESC as command_description,
           DEVICE.DEVID as device_id
      FROM DEVICECLASS
           LEFT OUTER JOIN PROPERTY
        ON DEVICECLASS.DEVCLASSID = PROPERTY.PROPDEVCLASSID
           LEFT OUTER JOIN FIELD
        ON PROPERTY.PROPID = FIELD.FIELDPROPID
           LEFT OUTER JOIN COMMAND
        ON DEVICECLASS.DEVCLASSID = COMMAND.CMDDEVCLASSID
           LEFT OUTER JOIN DEVICE
        ON DEVICECLASS.DEVCLASSID = DEVICE.DEVCLASSID
     WHERE DEVICECLASS.DEVCLASSID = #{id}
  </select>

  <insert id="insertDeviceClass"
    parameterType="cern.c2mon.server.common.device.DeviceClassCacheObject">
    INSERT INTO DEVICECLASS
    (DEVCLASSID, DEVCLASSNAME, DEVCLASSDESC)
    VALUES (#{id}, #{name}, #{description,jdbcType=VARCHAR})
  </insert>

  <insert id="insertDeviceClassProperty">
    INSERT INTO PROPERTY (PROPID, PROPNAME, PROPDESC, PROPDEVCLASSID)
    VALUES (#{property.id}, #{property.name}, #{property.description}, #{id})
  </insert>

  <insert id="insertDeviceClassField">
    INSERT INTO FIELD (FIELDID, FIELDNAME, FIELDPROPID)
    VALUES (#{field.id}, #{field.name}, #{id})
  </insert>

  <insert id="insertDeviceClassCommand">
    INSERT INTO COMMAND (CMDID, CMDNAME, CMDDESC, CMDDEVCLASSID)
    VALUES (#{command.id}, #{command.name}, #{command.description}, #{id})
  </insert>

  <update id="updateDeviceClassConfig" parameterType="cern.c2mon.server.common.device.DeviceClass">
    UPDATE DEVICECLASS
       SET DEVCLASSNAME = #{name},
           DEVCLASSDESC = #{description,jdbcType=VARCHAR}
     WHERE DEVCLASSID = #{id}
  </update>

  <select id="getMaxId" resultType="Long">
    SELECT MAX(DEVCLASSID)
    FROM
    DEVICECLASS
  </select>

  <select id="getMinId" resultType="Long">
    SELECT MIN(DEVCLASSID)
    FROM
    DEVICECLASS
  </select>

  <select id="isInDb" resultType="boolean" parameterType="Long">
    SELECT
    count(*)
    FROM DEVICECLASS
    WHERE DEVCLASSID = #{id}
  </select>

  <select id="getIdByName" resultType="Long" parameterType="String">
    SELECT DEVCLASSID
    FROM DEVICECLASS
    WHERE DEVCLASSNAME = #{name}
  </select>

  <select id="getByName" resultMap="deviceClassResultMap" parameterType="String">
    SELECT DEVICECLASS.DEVCLASSID as device_class_id,
           DEVICECLASS.DEVCLASSNAME as device_class_name,
           DEVICECLASS.DEVCLASSDESC as device_class_description,
           PROPERTY.PROPID as property_id,
           PROPERTY.PROPNAME as property_name,
           PROPERTY.PROPDESC as property_description,
           FIELD.FIELDID as field_id,
           FIELD.FIELDNAME as field_name,
           COMMAND.CMDID as command_id,
           COMMAND.CMDNAME as command_name,
           COMMAND.CMDDESC as command_description,
           DEVICE.DEVID as device_id
    FROM   DEVICECLASS
           LEFT OUTER JOIN PROPERTY
    ON     DEVICECLASS.DEVCLASSID = PROPERTY.PROPDEVCLASSID
           LEFT OUTER JOIN FIELD
    ON     PROPERTY.PROPID = FIELD.FIELDPROPID
           LEFT OUTER JOIN COMMAND
    ON     DEVICECLASS.DEVCLASSID = COMMAND.CMDDEVCLASSID
           LEFT OUTER JOIN DEVICE
    ON     DEVICECLASS.DEVCLASSID = DEVICE.DEVCLASSID
    WHERE  DEVICECLASS.DEVCLASSNAME = #{name}
  </select>

  <select id="getPropertyIdByPropertyNameAndDevClassId" resultType="Long">
    SELECT PROPID
    FROM   PROPERTY
    WHERE  PROPDEVCLASSID = #{device_class_id}
    AND    PROPNAME = #{property_name}
  </select>

  <select id="getCommandIdByCommandNameAndDevClassId" resultType="Long">
    SELECT CMDID
    FROM   COMMAND
      WHERE  CMDDEVCLASSID = #{device_class_id}
      AND    CMDNAME = #{command_name}
  </select>

  <select id="getNumberItems" resultType="Integer">
    SELECT COUNT(DISTINCT DEVCLASSID)
      FROM DEVICECLASS
  </select>

  <delete id="deleteDeviceClass" parameterType="Long">
    DELETE FROM DEVICECLASS WHERE DEVCLASSID = #{id}
  </delete>

  <delete id="deleteProperties" parameterType="Long">
    DELETE FROM PROPERTY WHERE PROPDEVCLASSID = #{id}
  </delete>

  <delete id="deleteFields" parameterType="Long">
    DELETE FROM FIELD WHERE FIELDPROPID = #{id}
  </delete>

  <delete id="deleteCommands" parameterType="Long">
    DELETE FROM COMMAND WHERE CMDDEVCLASSID = #{id}
  </delete>

</mapper>
